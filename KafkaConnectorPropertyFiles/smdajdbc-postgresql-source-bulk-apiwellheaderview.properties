# A simple example that copies all tables from a SQLite database. The first few settings are
# required for all connectors: a name, the connector class to run, and the maximum number of
# tasks to create:
name=smdatest-source-postgresql-jdbc-increment
connector.class=io.confluent.connect.jdbc.JdbcSourceConnector
tasks.max=10
# The remaining configs are specific to the JDBC source connector. In this example, we connect to a
# SQLite database stored in the file test.db, use and auto-incrementing column called 'id' to
# detect new rows as they are added, and output to topics prefixed with 'test-sqlite-jdbc-', e.g.
# a table called 'users' will be written to the topic 'test-sqlite-jdbc-users'.
#connection.url=jdbc:mysql://192.168.101.3:3306/databasename?user=xxx&password=xxx
#connection.url=jdbc:postgresql://10.0.64.42:5432/postgres?user=postgres&password=Namo123
connection.url=jdbc:postgresql://s173-smda-psql-dev.postgres.database.azure.com:5432/smda?user=db_admin&password=********
schema.pattern=  
table.whitelist=smda_api.api_wellheader
#table.include.list=smda_api.api_wellheader
#Bulk is batch import. In addition, there are increasing and timestamp modes
mode=bulk
table.types=VIEW
#incrementing.column.name=
#timestamp.column.name=unique_well_identifier,unique_wellbore_identifier
#incrementing.column.name=wellbore_uuid
topic.prefix=api_wellheader_bulk_dev
